Description:
  VPC Test

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: AA-TEST

  KeyPairName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: AA-TEST

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 172.30.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 172.30.11.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 172.30.12.0/24

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 172.30.21.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 172.30.22.0/24

  InboundSourceNetAllowed1:
    Description: Please enter the IP range (CIDR notation) for source network allowed to access resources
    Type: String
    Default: 0.0.0.0/0

  InboundSourceNetAllowed2:
    Description: Please enter the IP range (CIDR notation) for source network allowed to access resources
    Type: String
    Default: 0.0.0.0/0


  InstanceType:
    Description: AWS Windows 2016 EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]

  AmiID:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base'

Mappings: 
 RegionMap: 
  "us-east-1": 
   AMI: "ami-0273df992a343e0d6"
  "us-east-2":
   AMI: "ami-033a0960d9d83ead0"
  "us-west-1":
   AMI: "ami-057a852b5ed4b66bc"
  "us-west-2":
   AMI: "ami-04ef7170e45541f07"

Resources:
#############################################################################################
### NETWORK
#############################################################################################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 
          Ref: VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: 
            Ref: EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: 
            Ref: EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: 
          Ref: InternetGateway
      VpcId: 
        Ref: VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
          Ref: VPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - 
            Fn::GetAZs: ''
      CidrBlock: 
        Ref: PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${EnvironmentName}-Public1-AZ1-SN

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
          Ref: VPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - 
            Fn::GetAZs: ''
      CidrBlock: 
        Ref: PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${EnvironmentName}-Public2-AZ2-SN

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
          Ref: VPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - 
            Fn::GetAZs: ''
      CidrBlock: 
        Ref: PrivateSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${EnvironmentName}-Private1-AZ1-SN

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
          Ref: VPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - 
            Fn::GetAZs: ''
      CidrBlock: 
        Ref: PrivateSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${EnvironmentName}-Private2-AZ2-SN

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
          Ref: VPC
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${EnvironmentName}-Public-RT

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
          Ref: VPC
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${EnvironmentName}-Private-RT

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: 
          Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
          Ref: InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
          Ref: PublicRouteTable
      SubnetId: 
          Ref: PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
          Ref: PublicRouteTable
      SubnetId: 
          Ref: PublicSubnet2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
          Ref: PrivateRouteTable
      SubnetId: 
          Ref: PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
          Ref: PrivateRouteTable
      SubnetId: 
          Ref: PrivateSubnet2
#############################################################################################
### EC2 INSTANCES
#############################################################################################

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: 
        Ref: PublicSubnet1
      InstanceType:
        Ref: InstanceType
      # IamInstanceProfile:
      #   Ref: InstanceProfileDefault
      SecurityGroupIds:
        - Ref: InstanceSecurityGroup
      KeyName: 
        Ref: KeyPairName
      ImageId: 
        Ref: AmiID
      Tags:
        - Key: Name
          Value: 
            Fn::Sub: ${EnvironmentName}-AWS-LINUX

  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: 
        Ref: VPC
      GroupDescription: "Enable SSH and RDP access via port 22 and 3389"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 
            Ref: InboundSourceNetAllowed1
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 
            Ref: InboundSourceNetAllowed2
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ${EnvironmentName}-SSH-RDP-ICMP-SG

Outputs:
  PublicIP:
    Description: "AWS EC2 Instance Public IP Address"
    Value: 
      Fn::GetAtt:
        - EC2Instance
        - PublicIp
  PrivateIP:
    Description: "AWS EC2 Instance Private IP Address"
    Value: 
      Fn::GetAtt:
        - EC2Instance
        - PrivateIp

